#!/bin/bash
export REPO_DIR="@@REPO_DIR@@"

DB_PATH="$(pwd)/xqanalyse.db"
VERBOSE=false
MODULE=""
FUNCTION=""
ALL=false

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
  case $1 in
    --init)
      INIT=true
      shift
      ;;
    --verbose)
      VERBOSE=true
      shift
      ;;
    --module=*)
      MODULE="${1#*=}"
      shift
      ;;
    --function=*)
      FUNCTION="${1#*=}"
      shift
      ;;
    --all)
      ALL=true
      shift
      ;;
    *)
      # Collect additional parameters to pass to build-stack
      EXTRA_PARAMS="$EXTRA_PARAMS $1"
      shift
      ;;
  esac
done

main() {
  hh "Running xqanalyze from $(pwd)"
  hh "Using database path: $DB_PATH"

  if [ "$INIT" == "true" ]; then
    run_init
  elif [ -f "$DB_PATH" ]; then
    run_build_stack
  else
    hh "No database found at $DB_PATH"
    echo "Do you want to run --init? (y/n)"
    read -r response
    if [ "$response" == "y" ] || [ "$response" == "Y" ]; then
      run_init
    else
      echo "Exiting."
      exit 0
    fi
  fi
}

run_init() {
  hh "Initializing analysis in $(pwd)"
  hh "Database will be created at: $DB_PATH"
  # Delete existing directory
  rm -rf /tmp/xqanalyze/
  mkdir -p /tmp/xqanalyze/

  # Run the equivalent of --extract-all-functions and --import-checks
  if [ "$VERBOSE" == "true" ]; then
    hh "Extracting functions from all .xqy files..."
    /usr/local/bin/xqanalyze-worker --extract-all-functions "$DB_PATH"
    hh "Building database..."
    /usr/local/bin/xqanalyze-worker --import-checks "$DB_PATH"
  else
    /usr/local/bin/xqanalyze-worker --extract-all-functions "$DB_PATH" > /dev/null 2>&1
    /usr/local/bin/xqanalyze-worker --import-checks "$DB_PATH" > /dev/null 2>&1
  fi

  if [ $? -eq 0 ]; then
    hh "Initialization complete. Database created at $DB_PATH"
  else
    echo "Error during initialization."
    exit 1
  fi
}

run_build_stack() {
  hh "Building function call stack using database: $DB_PATH"
  local cmd="/usr/local/bin/xqanalyze-worker --build-stack"

  # Construct the command based on parameters
  if [ -n "$MODULE" ] && [ -n "$FUNCTION" ]; then
    cmd="$cmd --module=\"$MODULE\" --function=\"$FUNCTION\""
  elif [ "$ALL" == "true" ]; then
    cmd="$cmd $EXTRA_PARAMS"
  else
    # Interactive mode: always show output
    hh "Running interactive build stack..."
    /usr/local/bin/xqanalyze-worker --build-stack "$DB_PATH" --interactive
    if [ $? -eq 0 ]; then
      hh "Call stack generated successfully. Output at /tmp/output.gml"
    else
      echo "Error building call stack."
      exit 1
    fi
    return
  fi

  # Non-interactive mode: apply verbose setting
  if [ "$VERBOSE" == "true" ]; then
    eval "$cmd \"$DB_PATH\""
  else
    eval "$cmd \"$DB_PATH\" > /dev/null 2>&1"
  fi

  if [ $? -eq 0 ]; then
    hh "Call stack generated successfully. Output at /tmp/output.gml"
  else
    echo "Error building call stack."
    exit 1
  fi
}

hh() {
  echo -e "\033[33m$(date +%H:%M:%S) $1\033[0m"
}

main "$@"
